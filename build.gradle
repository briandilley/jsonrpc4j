buildscript {

    ext {
        set("jacksonVersion", "2.10.2")
        set("springVersion", "4.3.26.RELEASE")
        set("springBotVersion", "1.4.7.RELEASE")
        set("jettyVersion", "9.4.0.RC3")
        set("slf4jVersion", "1.7.30")
    }

    repositories {
        gradlePluginPortal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
        classpath "com.adarshr:gradle-test-logger-plugin:3.2.0"
    }
}

plugins {
    id('jacoco')
}

repositories {
    mavenLocal()
    gradlePluginPortal()
    mavenCentral()
    jcenter()
}

apply plugin: "java"
apply plugin: "com.adarshr.test-logger"

group = "com.github.briandilley.jsonrpc4j"
version = "1.6.1-SNAPSHOT"
description = """
This project aims to provide the facility to easily implement JSON-RPC for the java programming language.
"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

ext {
    releaseVersion = !version.toString().endsWith('-SNAPSHOT')
}

test {
    testLogging {
        exceptionFormat 	= "FULL"
        showExceptions 		= true
        showStackTraces 	= true
        showCauses 			= true
    }
    maxParallelForks = 1
    forkEvery = 1
    maxHeapSize = "2g"
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
    }
}

java {
    registerFeature('servletSupport') {
        usingSourceSet(sourceSets.main)
    }
    registerFeature('springSupport') {
        usingSourceSet(sourceSets.main)
    }
}

dependencies {
    implementation 'net.iharder:base64:2.3.9'
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"

    servletSupportImplementation 'javax.portlet:portlet-api:3.0.1'
    servletSupportImplementation 'javax.servlet:javax.servlet-api:4.0.1'

    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"

    springSupportImplementation "org.springframework:spring-core:${springVersion}"
    springSupportImplementation "org.springframework:spring-context:${springVersion}"
    springSupportImplementation "org.springframework:spring-web:${springVersion}"
    springSupportImplementation "org.springframework:spring-webmvc:${springVersion}"

    implementation 'commons-codec:commons-codec:1.10'
    implementation 'org.apache.httpcomponents:httpcore-nio:4.4.5'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.easymock:easymock:3.4'
    testImplementation("org.springframework.boot:spring-boot-starter-web:${springBotVersion}") {
        exclude module: 'logback-classic'
    }
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBotVersion}"
    testImplementation("org.eclipse.jetty:jetty-server:${jettyVersion}") {
        exclude module: 'javax.servlet'
    }
    testImplementation("org.eclipse.jetty:jetty-servlet:${jettyVersion}") {
        exclude module: 'org.eclipse.jetty.orbit'
    }
    testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.7'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.7'

}


task documentationJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

artifacts {
    archives documentationJar, sourcesJar
}

apply from: 'publishing.gradle'
